<<<<<<< HEAD
var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Solvespace', 'text': '', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'Tutorial practice', 'text': 'tutorial 1 simple plate \n \n tutorial 2 three-way connector \n \n tutorial_3_ Sketch Rotation around an Axis \n \n tutorial_4_Assembly \n \n tutorial_6_Christmas Tree(BONUS) \n \n tutorial_7_Constrained Movement \n \n tutorial_8_Interactive 3D Model in Browser \n \xa0 \xa0tutorial 11: Cubic Bezier Spline tool (Vase) \n \n', 'tags': '', 'url': 'Tutorial practice.html'}]};
=======
var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Solvespace', 'text': '', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'Tutorial practice', 'text': 'tutorial 1 simple plate \n \n tutorial 2 three-way connector \n \n tutorial_3_ Sketch Rotation around an Axis \n \n tutorial_4_Assembly \n \n tutorial_6_Christmas Tree(BONUS) \n \n tutorial_7_Constrained Movement \n \n tutorial_8_Interactive 3D Model in Browser \n \n tutorial_9_a Simple Gear \n \n tutorial_10_ Fidget Spinner \n \n tutorial_11_cubic bezier spline tool (vase) \n \n tutorial_12_How to create a Mechanical Linked System \n \n 繪圖驗證1 \n \n 繪圖驗證3 \n \n 繪圖驗證4 \n \n 繪圖認證6 \n \n 繪圖認證7 \n \n 繪圖認證8 \n \n 繪圖認證9 \n \n 繪圖認證10 \n \n 繪圖認證11 \n \n 繪圖認證12 \n \n 繪圖認證13 \n \n 繪圖認證14 \n \n 繪圖認證15 \n \n 繪圖認證16 \n \n 繪圖認證17 \n \n 繪圖驗證18 \n \n \n', 'tags': '', 'url': 'Tutorial practice.html'}, {'title': 'Car model', 'text': '\n 檔案位子:carmodel/carbody.slvs \n 參考圖像: https://www.google.com/search?q=rainbow+six++Unmanned+vehicle&rlz=1C1GCEA_enTW812TW812&sxsrf=ACYBGNRHnkoLe0kouEp3qp6hRlMV8B3EQQ:1571582838834&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjo1d-miqvlAhUryIsBHRXQCT0Q_AUIEigB&biw=871&bih=843#imgrc=_ \n', 'tags': '', 'url': 'Car model.html'}, {'title': 'Solidworks', 'text': '', 'tags': '', 'url': 'Solidworks.html'}, {'title': '開發起源', 'text': '起初Jon Hirschtick 和 Axel Bichara在創業班中組成一個團隊，他們寫了一個商業企劃，內容是叫做 Premise的 新CAD軟體公司。 \n Premise最初的軟體產品是Design View，是一個二維的繪圖軟體。雖然軟體的開發很成功但是由於市場太小以至於無法蓬勃發展起來，後來就被Computervision公司給收購了。 \n Jon Hirschtick\xa0和 Axel Bichara也到了Computervision的管理團隊待了一陣子，不過後來Axel Bichara待了大約一年就離開回到法國攻讀MBA學位。 \n 1993年8月Jon Hirschtick也離開了Computervision，因為他不知道他下一步該做什麼也覺得他除了經營公司以外應該還有其他的事情可以做。 \n 1994年1月一個創造低成本桌面設計系統基於實體模型技術的想法開始出現，於是Jon Hirschtick組成了一個團隊，成員包括 Bob Zuffante, Scott Harris, Constantine Dokos和Tommy Li，最終發展出 的產品就為Solidworks。 \n', 'tags': '', 'url': '開發起源.html'}, {'title': 'Inventor', 'text': '', 'tags': '', 'url': 'Inventor.html'}, {'title': 'Practice', 'text': '\n', 'tags': '', 'url': 'Practice.html'}, {'title': 'Webots', 'text': '', 'tags': '', 'url': 'Webots.html'}, {'title': 'tutorial', 'text': 'tutorial_1_my_first_simulation \n', 'tags': '', 'url': 'tutorial.html'}]};
>>>>>>> e57712a9a4b0cd2222e8ab8be05fcaf682d69cd9
